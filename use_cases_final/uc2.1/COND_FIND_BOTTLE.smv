
-- ===============================================================================
MODULE main
    VAR
        COND_FIND_BOTTLE_inst : COND_FIND_BOTTLE(from_bt, is_bottle_found);
    VAR
        from_bt : {disable, enable, no};
        is_bottle_found : {none, failed, succeeded};

    DEFINE
        to_bt := COND_FIND_BOTTLE_inst.to_bt;


-- ===============================================================================
--                               End of module
-- ===============================================================================

-- ===============================================================================
MODULE COND_FIND_BOTTLE(from_bt, is_bottle_found)
    VAR
        to_bt : {none, disabled, running, failed, succeeded};
	state : {idle, done, not_done, disabled};

    ASSIGN
	init(to_bt) := none;
	init(state) := idle;

	next(to_bt) :=
	  case
	    (state = idle & (from_bt = enable & is_bottle_found = succeeded)) : succeeded;
	    (state = idle & (from_bt = disable)) : disabled;
	    (state = idle & (from_bt = enable & (is_bottle_found = failed | is_bottle_found = none))) : failed;
	    (state = done & (from_bt = enable & is_bottle_found = succeeded)) : succeeded;
	    (state = done & (from_bt = disable)) : disabled;
	    (state = not_done & (from_bt = enable & (is_bottle_found = failed | is_bottle_found = none))) : failed;
	    (state = not_done & (from_bt = disable)) : disabled;
	    (state = disabled & (from_bt = enable & is_bottle_found = succeeded)) : succeeded;
	    (state = disabled & (from_bt = enable & is_bottle_found = failed)) : failed;
	    (state = disabled & (from_bt = disable)) : disabled;
	    TRUE: none;
	  esac;

  	next(state) :=
	  case
	    (state = idle & (from_bt = enable & is_bottle_found = succeeded)) : done;
	    (state = idle & (from_bt = enable & (is_bottle_found = failed | is_bottle_found = none))) : not_done;
	    (state = done & (from_bt = enable & is_bottle_found = succeeded)) : done;
	    (state = done & (from_bt = disable)) : disabled;
	    (state = not_done & (from_bt = enable & (is_bottle_found = failed | is_bottle_found = none))) : not_done;
	    (state = not_done & (from_bt = disable)) : disabled;
	    (state = disabled & (from_bt = enable & is_bottle_found = succeeded)) : done;
	    (state = disabled & (from_bt = enable & is_bottle_found = failed)) : not_done;
	    (state = disabled & (from_bt = disable)) : disabled;
	    TRUE: idle;
	  esac;

-- ===============================================================================
--                               End of module
-- ===============================================================================
