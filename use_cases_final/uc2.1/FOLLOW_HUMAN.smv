
-- ===============================================================================
MODULE main
    VAR
        FOLLOW_HUMAN_inst : FOLLOW_HUMAN(from_bt, is_target_given);
    VAR
        from_bt : {disable, enable, no};
        is_target_given : {none, failed, succeeded};

    DEFINE
        to_bt := FOLLOW_HUMAN_inst.to_bt;
        req_Target := FOLLOW_HUMAN_inst.req_Target;


-- ===============================================================================
--                               End of module
-- ===============================================================================

-- ===============================================================================
MODULE FOLLOW_HUMAN(from_bt, is_target_given)
    VAR
        to_bt : {none, disabled, running, failed, succeeded};
        req_Target : boolean;
	state : {init, unknown, keep_tracking_human, navigate, following, ask_help, disabled_init};


    ASSIGN
	init(to_bt) := none;
	init(req_Target) := FALSE;
	init(state) := init;

	next(to_bt) :=
	  case
	    (state = init & from_bt = no) : none;
	    (state = init & from_bt = disable) : disabled;
            (state = unknown & from_bt = disable) : disabled;
            (state = keep_tracking_human & from_bt = disable) : disabled;
            (state = navigate & from_bt = disable) : disabled;
            (state = ask_help & from_bt = disable) : disabled;
            (state = following & from_bt = disable) : disabled;
	    (state = disabled_init & (from_bt = disable | from_bt = no)) : disabled;
	    TRUE: running;
	  esac;

	next(req_Target) :=
	  case
	    (state = init & from_bt = no) : FALSE;
	    (state = init & from_bt = disable) : FALSE;
            (state = unknown & from_bt = disable) : FALSE;
            (state = keep_tracking_human & from_bt = disable) : FALSE;
            (state = navigate & from_bt = disable) : FALSE;
            (state = ask_help & from_bt = disable) : FALSE;
            (state = following & from_bt = disable) : FALSE;
	    (state = disabled_init & (from_bt = disable | from_bt = no)) : FALSE;
	    TRUE: TRUE;
	  esac;

  	next(state) :=
	  case
	    (state = init & from_bt = enable) : unknown;
	    (state = init & from_bt = disable) : disabled_init;
	    (state = unknown & from_bt = no) : unknown;
	    (state = unknown & (from_bt = enable & is_target_given = succeeded)) : following;
	    (state = unknown & (from_bt = enable & (is_target_given = none | is_target_given = failed))) : keep_tracking_human;
	    (state = unknown & from_bt = disable) : disabled_init;
	    (state = keep_tracking_human & (from_bt = enable & is_target_given = succeeded)) : following;
	    (state = keep_tracking_human & (from_bt = no | (from_bt = enable & (is_target_given = none | is_target_given = failed)))) : {keep_tracking_human,navigate};
	    (state = keep_tracking_human & from_bt = disable): disabled_init;
    	    (state = navigate &  (from_bt = no)) : navigate;	
	    (state = navigate &  (from_bt = enable & is_target_given = succeeded)) : following;
	    (state = navigate &  (from_bt = enable & (is_target_given = none | is_target_given = failed))) : ask_help;
	    (state = navigate & from_bt = disable) : disabled_init;
	    (state = ask_help & (from_bt = no | (from_bt = enable & (is_target_given = none | is_target_given = failed)))) : ask_help;
	    (state = ask_help & from_bt = disable) : disabled_init;
	    (state = ask_help &  (from_bt = enable & is_target_given = succeeded)) : following;
	    (state = following & (from_bt = no | (from_bt = enable & is_target_given = succeeded))) : following;
	    (state = following & (from_bt = enable & (is_target_given = none | is_target_given = failed))) : keep_tracking_human;
	    (state = following & from_bt = disable) : disabled_init;
	    (state = disabled_init & (from_bt = disable | from_bt = no)) : disabled_init;
	    (state = disabled_init & from_bt = enable) : unknown;
	    TRUE: init;
	  esac;

-- ===============================================================================
--                               End of module
-- ===============================================================================
