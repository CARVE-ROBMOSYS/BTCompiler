-- // This document contains no USA or EU export controlled technical data.
--
-- // CARVE has received funding from the European Union's Horizon 2020 research and
-- // innovation programme under grant agreement No 732410, in the form of financial
-- // support to third parties of the RobMoSys project.

#include "bt_with_skill_reset.smv"

-- Alternate Use case 1 which performs the bottle and glass actions in parallel.
-- Based on the extended BT formulation that supports BT reset.
MODULE main
  VAR
#include "uc1_bt.smv"
    do_bottle_and_glass : bt_parallel(2, do_bottle, do_glass);
    tick_generator : bt_tick_generator(bt_root);

  /--
    The BT can succeed. The returned counterexample is trivial: The
    `goto-kitchen` action fails and the `ask-for-help` succeeds.
  --/
  SPEC EF bt_root.output = bt_output_true
  -- Uncomment the LTL to get a counterexample.
  -- LTLSPEC G !(bt_root.output = bt_output_true)

  -- The BT can succesfully pour a drink.
  SPEC EF do_pour_drink_in_kitchen.output = bt_output_true
  -- Uncomment the LTL to get a trace.
  -- LTLSPEC G !(do_pour_drink_in_kitchen.output = bt_output_true)

  /--
    There exist a trace where the `fetch bottle` and `fetch glass` are both
    running in the same tick.
  --/
  SPEC AG EF (skill_fetch_bottle.output = bt_output_running &
    E [bt_root.visit = bt_visit_no U skill_fetch_glass.output = bt_output_running])

